#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, t: "List[int]", x: "List[int]", y: "List[int]"):
    x_now = 0
    y_now = 0
    t_now = 0

    for i in range(N):
        x_dis = abs(x[i] - x_now)
        y_dis = abs(y[i] - y_now)
        t_dif = t[i] - t_now
        
        if t_dif >= (x_dis+y_dis)  and  (t_dif-(x_dis+y_dis))%2==0:
            x_now = x[i]
            y_now = y[i]
            t_now = t[i]
        else:
            print(NO)
            return

    print(YES)

    return


# Generated by 2.11.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    t = [int()] * (N)  # type: "List[int]"
    x = [int()] * (N)  # type: "List[int]"
    y = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        t[i] = int(next(tokens))
        x[i] = int(next(tokens))
        y[i] = int(next(tokens))
    solve(N, t, x, y)

if __name__ == '__main__':
    main()
